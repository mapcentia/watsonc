# -*- coding: utf-8 -*-
"""
Created on Fri May 17 2019
@author: https://github.com/mapcentia
"""

import shapely.wkt
from shapely.geometry import LineString, Polygon, shape
from intersectiontool import getStationingPoints
from functools import partial
import pyproj
from shapely.ops import transform
from osgeo import ogr
if __name__ == "__main__":
    testCases = [[
        "LINESTRING(9.025569918346037 55.2614841972355,10.398860933971037 55.267744066040535,10.816341402721037 55.88876337733218)",
        "POLYGON((9.805599215221037 55.57327092583676,10.871273043346037 55.57327092583676,10.871273043346037 54.99767795186018,9.805599215221037 54.99767795186018,9.805599215221037 55.57327092583676))",
        [(49572, 123742)]
    ], [
        "LINESTRING(9.415584566783537 55.32403850837302,10.140682223033537 55.15805388317262,10.349422457408537 55.39273441222829,10.618587496471037 55.24896150019532)",
        "POLYGON((9.805599215221037 55.57327092583676,10.871273043346037 55.57327092583676,10.871273043346037 54.99767795186018,9.805599215221037 54.99767795186018,9.805599215221037 55.57327092583676))",
        [(26663, 102367)] # ok
    ], [
        "LINESTRING(10.088497164439787 55.18158437381302,10.104976656627287 55.39585412134481,10.626827242564787 55.46442545724039)",
        "POLYGON((9.805599215221037 55.57327092583676,10.871273043346037 55.57327092583676,10.871273043346037 54.99767795186018,9.805599215221037 54.99767795186018,9.805599215221037 55.57327092583676))",
        [(0, 57766)] #ok
    ], [
        "LINESTRING(10.516963961314787 54.86828164995621,10.865779879283537 54.914091341149366,11.110225680064787 54.89988011539551)",
        "POLYGON((9.805599215221037 55.57327092583676,10.871273043346037 55.57327092583676,10.871273043346037 54.99767795186018,9.805599215221037 54.99767795186018,9.805599215221037 55.57327092583676))",
        [] # ok
    ], [
        "LINESTRING(10.316463473033537 55.35371727296139,9.456783297252287 55.18158437381302)",
        "POLYGON((9.805599215221037 55.57327092583676,10.871273043346037 55.57327092583676,10.871273043346037 54.99767795186018,9.805599215221037 54.99767795186018,9.805599215221037 55.57327092583676))",
        [(0, 34341)] #ok
    ], [
        "LINESTRING(9.989620211314787 55.1753109342629,10.168148043346037 55.394294297559284,10.588375094127287 55.19099268164602,11.242061617564787 55.68026702188171)",
        "POLYGON((9.805599215221037 55.57327092583676,10.871273043346037 55.57327092583676,10.871273043346037 54.99767795186018,9.805599215221037 54.99767795186018,9.805599215221037 55.57327092583676))",
        [(0, 91672)] # ok
    ], [        "LINESTRING(9.588619234752287 55.17844777747748,9.989620211314787 55.338099642130075,10.352169039439787 54.844566535846354,10.615840914439787 55.231736347829525,11.203609469127287 55.334975376910336,11.082759859752287 55.512665593952164,10.473018648814787 55.49088704040473,10.242305758189787 55.692653475026816,9.995113375377287 55.44729378759991,9.555660250377287 55.37557161122351)",

        "POLYGON((9.805599215221037 55.57327092583676,10.871273043346037 55.57327092583676,10.871273043346037 54.99767795186018,9.805599215221037 54.99767795186018,9.805599215221037 55.57327092583676))",
        [(16841, 72057), (109089, 153937), (210595, 246879), (277746, 306477)] # OK
    ], [
        "LINESTRING(4.74609375 57.028773851491124, 11.4697265625 56.64414704199467, 6.61376953125 55.936894769039434)",
        "POLYGON((5.185546875 55.56592203025787, 7.18505859375 54.213861000644926, 13.60107421875 54.44449176335762, 11.271972656249998 58.240163543416415, 10.56884765625 55.86298231197633, 9.11865234375 57.1958078966064, 8.28369140625 55.65279803318956, 6.52587890625 58.112714441253125, 5.185546875 55.56592203025787))",
        [(70964, 162397), (254759, 295123), (371207, 456859), (508446, 594587), (636616, 723050)] # OK
    ]]

    testNames = ["A", "B", "C", "D", "E", "F", "G", "H"]

    testIndex = 0
    geom_out_line = []
    geom_out_polygon = []
    results=[]
    for t in testCases:
        print("Running test " + testNames[testIndex])

        inputLine = shapely.wkt.loads(t[0])
        inputPolygon = shapely.wkt.loads(t[1])

        project = partial(pyproj.transform, pyproj.Proj(init='epsg:4326'), pyproj.Proj(init='epsg:25832'))
        inputLineTransformed = transform(project, inputLine)
        inputPolygonTransformed = transform(project, inputPolygon)
        testIndex += 1

        result = getStationingPoints(inputLineTransformed, inputPolygonTransformed)
        results.append(result)
        print(result)

        # if isinstance(t[2], list):
        #     assert(len(result) == len(t[2]))
        #     counter = 0
        #     for x in t[2]:
        #         assert(result[counter][0] == t[2][counter][0])
        #         assert(result[counter][1] == t[2][counter][1])
        # else:
        #     assert(len(result) == t[2])
            
        # OMU SAVE GEOMETRIES TO TEXT FILE AND LOAD IN QGIS
        geom_out_line.append(testNames[testIndex-1] + "\t"+inputLineTransformed.wkt + "\n")
        geom_out_polygon.append(testNames[testIndex-1] + "\t"+inputPolygonTransformed.wkt + "\n")
    # file1 = open("geom_out_line.txt","w") 
    # file1.writelines(geom_out_line)
    # file1.close() 
    # file2 = open("geom_out_polygon.txt","w") 
    # file2.writelines(geom_out_polygon)
    # file2.close() 
